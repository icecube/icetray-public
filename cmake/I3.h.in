/**
 *  $Id$
 *
 *  Copyright (C) 2004, 2005, 2006, 2007
 *  Troy D. Straszheim  <troy@icecube.umd.edu>
 *  and the IceCube Collaboration <http://www.icecube.wisc.edu>
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *  1. Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *  2. Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *  
 *  THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 *  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 *  ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 *  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 *  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 *  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 *  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 *  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 *  SUCH DAMAGE.
 *  
 *  SPDX-License-Identifier: BSD-2-Clause
 *  
 */

#ifndef ICETRAY_I3_H_INCLUDED
#define ICETRAY_I3_H_INCLUDED

// gives us the tasty bits like INT32_MAX
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS
#endif
#ifndef __STDC_FORMAT_MACROS
#define __STDC_FORMAT_MACROS
#endif

#ifdef __cplusplus

// This headedr fixes a boost issue and a boost+cint issue under ICC.
// It's probably been long fixed. We're not really using ICC anywhere,
// so let's disable it until we get some complaints. There's more work
// I need to do re: icc anyway.

#if 0
#include <I3/intel_compatibility.h>
#endif

#include <boost/version.hpp>
#if BOOST_VERSION <= 107800
#define BOOST_ALLOW_DEPRECATED_HEADERS 1
#endif

#if BOOST_VERSION >= 107300
#define BOOST_BIND_GLOBAL_PLACEHOLDERS 1
#endif

//
//  Preprocessor def is set if we're building python bindings.
//
#ifdef I3_PYBINDINGS_MODULE

// this has to match the type of libs you link to.  This should
// probably be configured by the boost tool and put on the command
// line instead of done here.
#include <boost/version.hpp>

// We used to disable threads throughout everything.
#if BOOST_VERSION < 103600
#define BOOST_DISABLE_THREADS
#endif

#define BOOST_PYTHON_DYNAMIC_LIB

#include <boost/python.hpp>
#include <boost/python/suite/indexing/indexing_suite.hpp>
#include <boost/python/suite/indexing/map_indexing_suite.hpp>
#include <boost/python/suite/indexing/vector_indexing_suite.hpp>

#include "container_conversions.h"
using scitbx::boost_python::container_conversions::from_python_sequence;
using scitbx::boost_python::container_conversions::to_tuple;
using scitbx::boost_python::container_conversions::variable_capacity_policy;

#endif // I3_PYBINDINGS_MODULE


// e.g. gcc 3.4.6 -> 30406
#define GCC_VERSION (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__)

#if GCC_VERSION < 30400
#error gcc < 3.4 is not supported.  Please use gcc 3.4.x or newer.
#endif

#ifdef __APPLE_CC__
// another workaround for rootcint dumbness
#  ifndef __CINT__
// HACK: included early here to prevent typedef collisions with socklen_t
#    include <sys/socket.h>
#  endif
#  define _GLIBCPP_USE_C99 1
#  define _GLIBCXX_USE_C99 1
#else
#  define HAVE_STRNLEN 1
#endif

#define BOOST_NO_WREGEX

#ifdef NDEBUG
#define BOOST_DISABLE_ASSERTS
#endif

// workaround for braindead rootcint.  doesn't recognize the using
// boost::shared_ptr.  I can just see this popping up to cause us
// unspeakable aggravation in the future...

#ifdef __CINT__
template <typename T>
struct shared_ptr : boost::shared_ptr<T> { };

#ifdef __FreeBSD__
class __builtin_va_list;
#endif

#endif /* __CINT__ */

#ifdef I3_PYBINDINGS_MODULE 
#  include <pybindings.hpp> 
#endif 

#ifdef I3_ONLINE
#  include <boost/config.hpp>
#  if !defined(__GNUC__)
#    error "Do not use other than GNU C Compiler - it supports thread-safe initialization of local statics"
#  elif !defined(BOOST_HAS_THREADS)
#    error "Do not use boost without threading support"
#  elif defined(BOOST_DISABLE_THREADS)
#    error "Do not disable boost threading support"
#  elif defined(BOOST_SP_DISABLE_THREADS)
#    error "Do not switch boost to ordinary non-atomic reference count updates"
#  endif
#endif

#endif //ifdef __cplusplus
#endif //ifndef ICETRAY_I3_H_INCLUDED
